#include <cstdio>
#include <vector>
#include <algorithm>
#include <iostream>
#include <cmath>

using namespace std;

int nums[] = {1,7,10,13,19,23,28,31,32,44,49,68,70,79,82,86,91,94,97,100,103,109,129,130,133,139,167,176,188,190,192,193,203,208,219,226,230,236,
	239,262,263,280,291,293,301,302,310,313,319,320,326,329,331,338,356,362,365,367,368,376,379,383,386,391,392,397,404,409,440,446,464,469,
	478,487,490,496,536,556,563,565,566,608,617,622,623,632,635,637,638,644,649,653,655,656,665,671,673,680,683,694,700,709,716,736,739,748,
	761,763,784,790,793,802,806,818,820,833,836,847,860,863,874,881,888,899,901,904,907,910,912,913,921,923,931,932,937,940,946,964,970,973,
	989,998};
int coun[] = {0,5,1,2,4,3,3,2,3,4,4,2,5,3,3,2,4,4,3,1,2,4,3,2,5,5,3,3,4,4,3,5,3,3,3,5,3,5,5,5,5,3,3,5,2,3,2,5,5,3,5,5,5,4,6,5,6,5,5,5,6,4,5,5,5,6,4,4,4,3,3,6,4,4,4,6,6,3,6,3,4,2,3,5,5,5,6,5,5,3,6,6,3,4,4,3,5,2,5,6,5,3,3,5,6,4,3,5,4,3,6,3,2,4,3,4,5,4,2,5,4,4,4,6,4,4,3,4,3,5,3,5,5,5,6,4,6,6,3,6,6,6};

static char buff[12960000], *ptr = buff;

inline int nextInt() {
	int ret = 0;
	while(*ptr < '0' || *ptr > '9') ptr++;
	do { ret = ret * 10 + *ptr++ - '0';
	} while(*ptr >= '0' && *ptr <= '9');
	return ret;
}

int main()
{
	int i,j,k,l,t,u,A[1000]={0},B[1000],m,n;
	j=0;
	for(i=0;i<115;i++)
	{
		A[nums[i]] = 1;
		B[nums[i]] = coun[i];
	}
	fread_unlocked(buff, 12960000, 1, stdin);
	t = nextInt();
	for(i=0;i<t;i++)
	{
	//	scanf("%d",&n);
		n = nextInt();
		if(n == 1)
		{
			printf("0\n");
			continue;
		}
		else
		{
			m = 0;
			while(n != 0)
			{
				m = m + pow(n%10,2);
				n = n/10;
			}
			if(A[m] == 1)
			{
				printf("%d\n",B[m]+1);
			}
			else
				printf("-1\n");
		}
	}
	return 0;
}
